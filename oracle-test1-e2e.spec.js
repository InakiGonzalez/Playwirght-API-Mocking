import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
  await page.goto('https://oraclekairo.com/');
  await page.getByRole('textbox', { name: 'Email' }).click();
  await page.getByRole('textbox', { name: 'Email' }).fill('lorena@tec.mx');
  await page.getByRole('textbox', { name: 'Password' }).click();
  await page.getByRole('textbox', { name: 'Password' }).fill('123456');
  await page.getByRole('button', { name: 'Sign in icon Sign In' }).click();
  await expect(page.getByRole('main')).toMatchAriaSnapshot(`- heading "Teams" [level=2]`);
  await page.getByText('All Tasks').click();
  await page.getByRole('button', { name: 'Epics' }).click();
  await page.getByRole('button', { name: '✕' }).click();
  await page.getByRole('button', { name: 'Create Task' }).click();
  await page.getByRole('button', { name: '✕' }).click();
  await page.getByRole('button', { name: 'Sprints' }).click();
  await expect(page.getByRole('main')).toContainText('Sprint 4 (OCI) (Oswaldo)');
  await page.getByRole('button', { name: '×' }).click();
  await page.getByRole('button', { name: 'Epics' }).click();
  await page.getByRole('textbox', { name: 'Título' }).click();
  await page.getByRole('textbox', { name: 'Título' }).press('CapsLock');
  await page.getByRole('textbox', { name: 'Título' }).fill('Epiv ');
  await page.getByRole('textbox', { name: 'Título' }).press('CapsLock');
  await page.getByRole('textbox', { name: 'Título' }).fill('Epiv Prueba');
  await page.getByRole('textbox', { name: 'Título' }).click();
  await page.getByRole('textbox', { name: 'Título' }).press('ArrowLeft');
  await page.getByRole('textbox', { name: 'Título' }).press('ArrowLeft');
  await page.getByRole('textbox', { name: 'Título' }).press('ArrowLeft');
  await page.getByRole('textbox', { name: 'Título' }).press('ArrowLeft');
  await page.getByRole('textbox', { name: 'Título' }).press('ArrowLeft');
  await page.getByRole('textbox', { name: 'Título' }).press('ArrowLeft');
  await page.getByRole('textbox', { name: 'Título' }).press('ArrowLeft');
  await page.getByRole('textbox', { name: 'Título' }).fill('Epic Prueba');
  await page.getByRole('textbox', { name: 'Descripción' }).click();
  await page.getByRole('textbox', { name: 'Descripción' }).fill('epic prueba 1');
  page.once('dialog', dialog => {
    console.log(`Dialog message: ${dialog.message()}`);
    dialog.dismiss().catch(() => {});
  });
  await page.getByRole('button', { name: 'Create Epic' }).click();
  await page.getByRole('button', { name: 'Editar' }).nth(3).click();
  await page.getByRole('textbox').filter({ hasText: 'epic prueba' }).click();
  await page.getByRole('textbox').filter({ hasText: 'epic prueba' }).fill('epic prueba ');
  page.once('dialog', dialog => {
    console.log(`Dialog message: ${dialog.message()}`);
    dialog.dismiss().catch(() => {});
  });
  await page.getByRole('button', { name: 'Guardar' }).click();
  page.once('dialog', dialog => {
    console.log(`Dialog message: ${dialog.message()}`);
    dialog.dismiss().catch(() => {});
  });
  await page.getByRole('button', { name: 'Eliminar' }).nth(3).click();
  await page.getByRole('button', { name: '✕' }).click();
  await page.getByRole('button', { name: 'Create Task' }).click();
  await page.getByRole('textbox', { name: 'Title' }).click();
  await page.getByRole('textbox', { name: 'Title' }).press('CapsLock');
  await page.getByRole('textbox', { name: 'Title' }).fill('Task prueba');
  await page.getByRole('textbox', { name: 'Description' }).click();
  await page.getByRole('textbox', { name: 'Description' }).press('CapsLock');
  await page.getByRole('textbox', { name: 'Description' }).fill('Task 1 e2e');
  await page.getByLabel('EpicSelecciona un Epic123 -').selectOption('123');
  await page.locator('select[name="priority"]').selectOption('Low');
  await page.locator('select[name="type"]').selectOption('Ticket');
  await page.locator('input[name="estimatedDeadline"]').fill('2025-06-14');
  await page.getByRole('spinbutton', { name: 'Estimated Hours' }).click();
  await page.getByRole('spinbutton', { name: 'Estimated Hours' }).fill('01');
  await page.getByRole('spinbutton', { name: 'Estimated Hours' }).press('ArrowLeft');
  await page.getByRole('spinbutton', { name: 'Estimated Hours' }).fill('1');
  await page.getByRole('spinbutton', { name: 'User Points' }).click();
  await page.getByRole('spinbutton', { name: 'User Points' }).fill('02');
  await page.getByRole('spinbutton', { name: 'User Points' }).press('ArrowLeft');
  await page.getByRole('spinbutton', { name: 'User Points' }).fill('2');
  page.once('dialog', dialog => {
    console.log(`Dialog message: ${dialog.message()}`);
    dialog.dismiss().catch(() => {});
  });
  await page.locator('form').getByRole('button', { name: 'Create Task' }).click();
  await page.getByText('All Tasks').click();
  await page.getByRole('button', { name: 'Assign/Unassign Task' }).click();
  await page.locator('div').filter({ hasText: /^Select Task-- Choose a Task --Task prueba$/ }).getByRole('combobox').selectOption('143');
  await expect(page.getByRole('main')).toContainText('-- Choose a Task --Task prueba');
  await page.getByRole('combobox').nth(1).selectOption('241');
  page.once('dialog', dialog => {
    console.log(`Dialog message: ${dialog.message()}`);
    dialog.dismiss().catch(() => {});
  });
  await page.getByRole('button', { name: 'Assign Task', exact: true }).click();
  await page.getByRole('button', { name: 'Assign/Unassign Task' }).click();
  await page.locator('div').filter({ hasText: /^Select Task-- Choose a Task --Task prueba$/ }).getByRole('combobox').selectOption('143');
  await page.getByRole('combobox').nth(1).selectOption('241');
  page.once('dialog', dialog => {
    console.log(`Dialog message: ${dialog.message()}`);
    dialog.dismiss().catch(() => {});
  });
  await page.getByRole('button', { name: 'Unassign Task', exact: true }).click();
  await page.getByRole('button', { name: 'Edit/Delete Tasks' }).click();
  await page.getByRole('combobox').selectOption('143');
  await page.getByRole('button', { name: 'Search' }).click();
  await expect(page.locator('form')).toContainText('Title');
  await page.locator('#root div').filter({ hasText: '✕Edit/Delete TaskSelect' }).nth(3).click();
  await page.locator('select[name="status"]').press('ControlOrMeta+-');
  await page.locator('select[name="status"]').press('ControlOrMeta+-');
  await page.locator('select[name="status"]').press('ControlOrMeta+-');
  await page.locator('select[name="status"]').press('ControlOrMeta+-');
  await page.locator('#root div').filter({ hasText: '✕Edit/Delete TaskSelect' }).nth(3).click();
  await page.locator('select[name="status"]').press('ControlOrMeta+-');
  await page.locator('select[name="status"]').selectOption('InProgress');
  page.once('dialog', dialog => {
    console.log(`Dialog message: ${dialog.message()}`);
    dialog.dismiss().catch(() => {});
  });
  await page.getByRole('button', { name: 'Delete Task', exact: true }).click();
  await page.getByRole('button', { name: 'Sprints' }).click();
  await page.getByRole('button', { name: '×' }).click();
  await page.getByRole('button', { name: 'Dependencies' }).click();
  await page.getByRole('link', { name: 'Calendar' }).click();
  await expect(page.getByRole('main')).toMatchAriaSnapshot(`- heading "My Tasks" [level=2]`);
  await page.getByRole('link', { name: 'KPIs' }).click();
  await expect(page.getByRole('main')).toMatchAriaSnapshot(`- heading "KPIs" [level=2]`);
  await page.getByRole('combobox').first().selectOption('1');
  await page.getByRole('combobox').nth(1).selectOption('185');
  await page.getByRole('combobox').nth(1).selectOption('82');
  await page.getByRole('combobox').nth(1).selectOption('141');
  await expect(page.getByRole('paragraph')).toMatchAriaSnapshot(`- paragraph: No hay tareas para esta combinación.`);
  await expect(page.getByRole('paragraph')).toContainText('No hay tareas para esta combinación.');
  await page.getByRole('navigation').filter({ hasText: /^KPIs$/ }).locator('div').getByRole('img').click();
  await page.getByRole('button', { name: 'Home' }).click();
  await page.getByRole('link', { name: 'Calendar' }).click();
  await page.getByRole('navigation').filter({ hasText: /^Calendar$/ }).locator('div').click();
  await page.getByRole('navigation').filter({ hasText: /^Calendar$/ }).click();
  await page.getByRole('navigation').filter({ hasText: /^Calendar$/ }).locator('div').getByRole('img').click();
  await page.getByRole('navigation').filter({ hasText: /^Calendar$/ }).getByRole('button').click();
  await page.getByRole('button').filter({ hasText: /^$/ }).nth(1).click();
  await expect(page.locator('h1')).toMatchAriaSnapshot(`- heading "Select an option" [level=1]`);
  await page.getByRole('button', { name: 'Log out icon Log out' }).click();
  await expect(page.locator('h1')).toMatchAriaSnapshot(`- heading "Sign In" [level=1]`);
});